// scripts/generate-from-csv.mjs
import fs from "node:fs";
import path from "node:path";
import { fileURLToPath } from "node:url";
import { parse } from "csv-parse/sync";

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

const CSV_PATH = path.resolve(__dirname, "../src/iso-mapping-3166.csv");
const OUT_PATH = path.resolve(__dirname, "../src/data.js");

// Read + parse CSV (handles quoted fields)
const csv = fs.readFileSync(CSV_PATH, "utf8");
const rows = parse(csv, {
    columns: true,
    skip_empty_lines: true,
    trim: true
});

// Build maps
const ISO2_TO_3 = {};
const ISO2_TO_N3 = {};

for (const r of rows) {
    const a2 = r["Alpha-2 code"]?.toUpperCase().trim();
    const a3 = r["Alpha-3 code"]?.toUpperCase().trim();
    const n = String(r["Numeric"] ?? "").trim().padStart(3, "0");
    if (!a2 || !a3 || !/^\d{1,3}$/.test(String(r["Numeric"]))) continue;

    ISO2_TO_3[a2] = a3;
    ISO2_TO_N3[a2] = n;
}

// Aliases (documented behavior)
ISO2_TO_3.UK = "GBR";                // common alias for GB
ISO2_TO_3.XK = "XKX";                // Kosovo (user-assigned)
ISO2_TO_3.EL = "GRC";                // Greece (EU context)

ISO2_TO_N3.UK = ISO2_TO_N3.GB;       // "826"
ISO2_TO_N3.EL = ISO2_TO_N3.GR;       // "300"
ISO2_TO_N3.XK = "383";               // common numeric for XK (user-assigned)

// Reverse maps
const ISO3_TO_2 = Object.fromEntries(Object.entries(ISO2_TO_3).map(([a2, a3]) => [a3, a2]));
const N3_TO_2 = Object.fromEntries(Object.entries(ISO2_TO_N3).map(([a2, n]) => [n, a2]));

// Emit JS module
const header = `// ⚠️ AUTO-GENERATED by scripts/generate-from-csv.mjs
// Source: src/iso-mapping-3166.csv
// Do not edit this file manually—edit the CSV and re-run the generator.
`;

const js = `${header}
export const ISO2_TO_3 = ${JSON.stringify(ISO2_TO_3, null, 2)};

export const ISO2_TO_N3 = ${JSON.stringify(ISO2_TO_N3, null, 2)};

export const ISO3_TO_2 = ${JSON.stringify(ISO3_TO_2, null, 2)};
export const N3_TO_2   = ${JSON.stringify(N3_TO_2, null, 2)};
`;

fs.writeFileSync(OUT_PATH, js, "utf8");
console.log(`Generated: ${path.relative(process.cwd(), OUT_PATH)}`);